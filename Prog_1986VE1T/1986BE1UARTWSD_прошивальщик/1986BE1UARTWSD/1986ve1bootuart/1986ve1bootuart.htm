<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Prog_1986VE1T\1986BE1UARTWSD\1986BE1UARTWSD\1986ve1bootuart\1986ve1bootuart.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Prog_1986VE1T\1986BE1UARTWSD\1986BE1UARTWSD\1986ve1bootuart\1986ve1bootuart.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.02 [Build 28]: Last Updated: Tue Jan 20 14:53:05 2015
<BR><P>
<H3>Maximum Stack Usage =         24 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
bootuart &rArr; Erase &rArr; OutIntTX
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">sleep</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">sleep</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_bootuart.o(.text) referenced from startup_bootuart.o(RESET)
 <LI><a href="#[1]">bootuart</a> from bootuart.o(.text) referenced from startup_bootuart.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2]"></a>sleep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bootuart.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Getbufdata
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_bootuart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bootuart.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>OutByteTX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bootuart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutIntTX
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[4]"></a>GetByteRX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bootuart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntRX
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[3]"></a>GetIntRX</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetIntRX
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetByteRX
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[5]"></a>OutIntTX</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OutIntTX
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByteTX
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Verify
</UL>

<P><STRONG><a name="[7]"></a>Getbufdata</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Getbufdata
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Verify
</UL>

<P><STRONG><a name="[8]"></a>Verify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Verify &rArr; Getbufdata
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Getbufdata
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutIntTX
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[9]"></a>Program</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Program &rArr; GetIntRX
</UL>
<BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntRX
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByteTX
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[a]"></a>Erase</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Erase &rArr; OutIntTX
</UL>
<BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutIntTX
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByteTX
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootuart
</UL>

<P><STRONG><a name="[1]"></a>bootuart</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, bootuart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bootuart &rArr; Erase &rArr; OutIntTX
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Verify
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntRX
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetByteRX
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByteTX
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_bootuart.o(.text)
</UL><P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
