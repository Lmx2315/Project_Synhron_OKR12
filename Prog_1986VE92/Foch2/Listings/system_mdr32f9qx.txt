; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list -c --asm --interleave -o.\objects\system_mdr32f9qx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_mdr32f9qx.d --cpu=Cortex-M3 --apcs=interwork -IC:\SOFT_project\Mk\Project_Synhron_OKR12\Prog_1986VE92\Foch2\RTE -IC:\SOFT_project\Mk\Project_Synhron_OKR12\Prog_1986VE92\Foch2\RTE\Device\MDR1986BE92 -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Config -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\CoreSupport -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=513 -D_RTE_ -DUSE_MDR32F9Q2_Rev1 -W --enum_is_int --signed_chars RTE\Device\MDR1986BE92\system_MDR32F9Qx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;66       */
;;;67     void SystemCoreClockUpdate (void)
000000  4b1e              LDR      r3,|L1.124|
;;;68     {
000002  b510              PUSH     {r4,lr}
;;;69       uint32_t cpu_c1_freq, cpu_c2_freq, cpu_c3_freq;
;;;70       uint32_t pll_mul;
;;;71     
;;;72       /* Compute CPU_CLK frequency */
;;;73     
;;;74       /* Determine CPU_C1 frequency */
;;;75       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000002) == (uint32_t)0x00000002)
000004  68d8              LDR      r0,[r3,#0xc]
;;;76       {
;;;77         cpu_c1_freq = HSE_Value;
;;;78       }
;;;79       else
;;;80       {
;;;81         cpu_c1_freq = HSI_Value;
000006  4c1e              LDR      r4,|L1.128|
000008  0780              LSLS     r0,r0,#30             ;75
00000a  d501              BPL      |L1.16|
00000c  0060              LSLS     r0,r4,#1              ;77
00000e  e000              B        |L1.18|
                  |L1.16|
000010  4620              MOV      r0,r4
                  |L1.18|
;;;82       }
;;;83     
;;;84       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000001) == (uint32_t)0x00000001)
000012  68d9              LDR      r1,[r3,#0xc]
000014  07c9              LSLS     r1,r1,#31
000016  d000              BEQ      |L1.26|
;;;85       {
;;;86         cpu_c1_freq /= 2;
000018  0840              LSRS     r0,r0,#1
                  |L1.26|
;;;87       }
;;;88     
;;;89       /* Determine CPU_C2 frequency */
;;;90       cpu_c2_freq = cpu_c1_freq;
;;;91     
;;;92       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000004) == (uint32_t)0x00000004)
00001a  68d9              LDR      r1,[r3,#0xc]
00001c  0749              LSLS     r1,r1,#29
00001e  d504              BPL      |L1.42|
;;;93       {
;;;94         /* Determine CPU PLL output frequency */
;;;95         pll_mul = ((MDR_RST_CLK->PLL_CONTROL >> 8) & (uint32_t)0x0F) + 1;
000020  6859              LDR      r1,[r3,#4]
000022  f3c12103          UBFX     r1,r1,#8,#4
000026  1c49              ADDS     r1,r1,#1
;;;96         cpu_c2_freq *= pll_mul;
000028  4348              MULS     r0,r1,r0
                  |L1.42|
;;;97       }
;;;98     
;;;99       /*Select CPU_CLK from HSI, CPU_C3, LSE, LSI cases */
;;;100      switch ((MDR_RST_CLK->CPU_CLOCK >> 8) & (uint32_t)0x03)
00002a  68d9              LDR      r1,[r3,#0xc]
;;;101      {
;;;102        case 0 :
;;;103          /* HSI */
;;;104          SystemCoreClock = HSI_Value;
00002c  4a15              LDR      r2,|L1.132|
00002e  f3c12101          UBFX     r1,r1,#8,#2           ;100
000032  b131              CBZ      r1,|L1.66|
000034  2901              CMP      r1,#1                 ;100
000036  d006              BEQ      |L1.70|
000038  2902              CMP      r1,#2                 ;100
00003a  d00b              BEQ      |L1.84|
;;;105          break;
;;;106        case 1 :
;;;107          /* CPU_C3 */
;;;108          /* Determine CPU_C3 frequency */
;;;109          cpu_c3_freq = cpu_c2_freq / ((MDR_RST_CLK->CPU_CLOCK >> 4 & (uint32_t)0x0F) + 1);
;;;110          SystemCoreClock = cpu_c3_freq;
;;;111          break;
;;;112        case 2 :
;;;113          /* LSE */
;;;114          SystemCoreClock = LSE_Value;
;;;115          break;
;;;116        default : /* case 3 */
;;;117          /* LSI */
;;;118          SystemCoreClock = LSI_Value;
00003c  f6494040          MOV      r0,#0x9c40
;;;119          break;
000040  e00a              B        |L1.88|
                  |L1.66|
000042  6014              STR      r4,[r2,#0]            ;105  ; SystemCoreClock
;;;120      }
;;;121    }
000044  bd10              POP      {r4,pc}
                  |L1.70|
000046  68d9              LDR      r1,[r3,#0xc]          ;109
000048  f3c11103          UBFX     r1,r1,#4,#4           ;109
00004c  1c49              ADDS     r1,r1,#1              ;109
00004e  fbb0f0f1          UDIV     r0,r0,r1              ;109
000052  e001              B        |L1.88|
                  |L1.84|
000054  f44f4000          MOV      r0,#0x8000            ;114
                  |L1.88|
000058  6010              STR      r0,[r2,#0]            ;118  ; SystemCoreClock
00005a  bd10              POP      {r4,pc}
;;;122    
                          ENDP

                  SystemInit PROC
;;;130      */
;;;131    void SystemInit (void)
00005c  4807              LDR      r0,|L1.124|
;;;132    {
;;;133    	/* Reset the RST clock configuration to the default reset state */
;;;134    
;;;135      /* Reset all clock but RST_CLK & BKP_CLC bits */
;;;136      MDR_RST_CLK->PER_CLOCK   = (uint32_t)0x8000010;
00005e  490a              LDR      r1,|L1.136|
000060  61c1              STR      r1,[r0,#0x1c]
;;;137    
;;;138      /* Reset CPU_CLOCK bits */
;;;139      MDR_RST_CLK->CPU_CLOCK   &= (uint32_t)0x00000000;
000062  68c1              LDR      r1,[r0,#0xc]
000064  2100              MOVS     r1,#0
000066  60c1              STR      r1,[r0,#0xc]
;;;140    
;;;141      /* Reset PLL_CONTROL bits */
;;;142      MDR_RST_CLK->PLL_CONTROL &= (uint32_t)0x00000000;
000068  6842              LDR      r2,[r0,#4]
00006a  6041              STR      r1,[r0,#4]
;;;143    
;;;144      /* Reset HSEON and HSEBYP bits */
;;;145      MDR_RST_CLK->HS_CONTROL  &= (uint32_t)0x00000000;
00006c  6882              LDR      r2,[r0,#8]
00006e  6081              STR      r1,[r0,#8]
;;;146    
;;;147      /* Reset USB_CLOCK bits */
;;;148      MDR_RST_CLK->USB_CLOCK   &= (uint32_t)0x00000000;
000070  6902              LDR      r2,[r0,#0x10]
000072  6101              STR      r1,[r0,#0x10]
;;;149    
;;;150      /* Reset ADC_MCO_CLOCK bits */
;;;151      MDR_RST_CLK->ADC_MCO_CLOCK   &= (uint32_t)0x00000000;
000074  6942              LDR      r2,[r0,#0x14]
000076  6141              STR      r1,[r0,#0x14]
;;;152    
;;;153      SystemCoreClockUpdate();
000078  e7fe              B        SystemCoreClockUpdate
;;;154    }
;;;155    
                          ENDP

00007a  0000              DCW      0x0000
                  |L1.124|
                          DCD      0x40020000
                  |L1.128|
                          DCD      0x007a1200
                  |L1.132|
                          DCD      ||.data||
                  |L1.136|
                          DCD      0x08000010

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x007a1200

;*** Start embedded assembler ***

#line 1 "RTE\\Device\\MDR1986BE92\\system_MDR32F9Qx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\Keil\\MDR1986BExx\\1.4\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___18_system_MDR32F9Qx_c_5d646a67____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH|
#line 144
|__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
